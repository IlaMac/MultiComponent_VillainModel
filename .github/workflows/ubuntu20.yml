name: Ubuntu 20.04
# INSPIRATION https://github.com/onqtam/doctest/pull/285/files/875052e18cf5f5f0b9176e59f847b6205f3efb78#

on:
  pull_request:
  push:
    branches:
      - master
      - GUI

jobs:
  ci:
    name: ${{ matrix.compiler }}-${{ matrix.linkage }}-${{ matrix.manager }}
    runs-on: ubuntu-20.04
    env:
      cache-name: cache-${{ matrix.compiler }}-${{ matrix.linkage }}-${{ matrix.manager }}
    strategy:
      fail-fast: true # True stops all on first error. Stick to false when debugging
      matrix:
        include:

          - { compiler: gcc,   linkage: shared, manager: cmake }
          - { compiler: gcc,   linkage: shared, manager: conan }
          - { compiler: clang, linkage: shared, manager: cmake }
          - { compiler: clang, linkage: shared, manager: conan }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        if: contains(matrix.manager, 'conan')
        with:
          python-version: '3.x'

      - uses: actions/cache@v2
        with:
          path: |
            ~/.conan/data
            ~/gl-install
          key: ${{ runner.os }}-${{ env.cache-name }}

      - uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ runner.os }}-${{ env.cache-name }}
          max-size: 500M

      - name: Setup gcc # compilers are already installed on the CI
        if: matrix.compiler == 'gcc'
        run: |
          sudo apt-get install gcc-10 g++-10 gfortran -y
          echo "FC=gfortran"  >> $GITHUB_ENV
          echo "CC=gcc-10"    >> $GITHUB_ENV
          echo "CXX=g++-10"   >> $GITHUB_ENV

      - name: Setup clang
        if: matrix.compiler == 'clang' # compilers are already installed on the CI # sudo apt-get install libclang-10-dev gfortran -y
        run: |
          echo "FC=gfortran"    >> $GITHUB_ENV
          echo "CC=clang-10"    >> $GITHUB_ENV
          echo "CXX=clang++-10" >> $GITHUB_ENV

      - name: Setup apt packages
        run: |
          sudo apt install libopenmpi-dev openmpi-bin -y


      - name: Setup apt packages for opengl
        if: github.ref == 'refs/heads/GUI'
        run: |
          sudo apt install libopengl-dev libegl-dev libgl-dev libglx-dev xorg-dev libx11-xcb-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev \
                           libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev \
                           libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev -y

      - name: Setup conan
        if: matrix.manager == 'conan'
        run: |
          pip install conan
          conan user

      - name: Build
        shell: bash
        run: ./build.sh --install-prefix=~/gl-install

      - name: Test
        run: |
          cd build/Release
          ctest -C Release --output-on-failure -R gl-




